name: Static SDK

on:
  workflow_call:
    inputs:
      env_vars:
        type: string
        description: "Environment variables for jobs (e.g., 'DEBUG=1,LOG_LEVEL=info')."
        default: ""
      env_var_pair_separator:
        type: string
        description: "Separator between key and value for environment variables."
        default: "="
      env_var_list_separator:
        type: string
        description: "Separator between environment variable pairs."
        default: ","

jobs:
  construct-matrix:
    name: Construct Static SDK matrix
    runs-on: ubuntu-latest
    outputs:
      static-sdk-matrix: '${{ steps.generate-matrix.outputs.static-sdk-matrix }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - id: generate-matrix
        run: |
          # Parse environment variables using the parse_env_vars script
          env_vars_json=$(curl -s --retry 3 https://raw.githubusercontent.com/apple/swift-nio/matrix_custom_env_vars/scripts/parse_env_vars.sh | ENV_VARS="$MATRIX_ENV_VARS" ENV_VAR_PAIR_SEPARATOR="$MATRIX_ENV_VAR_PAIR_SEPARATOR" ENV_VAR_LIST_SEPARATOR="$MATRIX_ENV_VAR_LIST_SEPARATOR" bash)

          # Generate matrix with parsed environment variables
          cat >> "$GITHUB_OUTPUT" << EOM
          static-sdk-matrix=$(echo '{
            "config":[
              {
                "name":"latest-release Jammy",
                "swift_version":"latest-release",
                "platform":"Linux",
                "runner":"ubuntu-latest",
                "image":"ubuntu:jammy",
                "setup_command":"apt update -q && apt install -y -q curl jq tar && curl -s --retry 3 https://raw.githubusercontent.com/apple/swift-nio/main/scripts/install_swift_prerequisites.sh | bash && curl -s --retry 3 https://raw.githubusercontent.com/apple/swift-nio/main/scripts/install_static_sdk.sh | INSTALL_SWIFT_STATIC_SDK_VERSION=latest INSTALL_SWIFT_STATIC_SDK_ARCH=x86_64 bash && hash -r",
                "command":"swift build",
                "command_arguments":"--swift-sdk x86_64-swift-linux-musl",
                "env":'"$env_vars_json"'
              },
              {
                "name":"main Jammy",
                "swift_version":"main",
                "platform":"Linux",
                "runner":"ubuntu-latest",
                "image":"ubuntu:jammy",
                "setup_command":"apt update -q && apt install -y -q curl jq tar && curl -s --retry 3 https://raw.githubusercontent.com/apple/swift-nio/main/scripts/install_swift_prerequisites.sh | bash && curl -s --retry 3 https://raw.githubusercontent.com/apple/swift-nio/main/scripts/install_static_sdk.sh | INSTALL_SWIFT_STATIC_SDK_BRANCH=main INSTALL_SWIFT_STATIC_SDK_ARCH=x86_64 bash && hash -r",
                "command":"swift build",
                "command_arguments":"--swift-sdk x86_64-swift-linux-musl",
                "env":'"$env_vars_json"'
              }
            ]
          }' | jq -c)
          EOM
        env:
          MATRIX_ENV_VARS: ${{ inputs.env_vars }}
          MATRIX_ENV_VAR_PAIR_SEPARATOR: ${{ inputs.env_var_pair_separator }}
          MATRIX_ENV_VAR_LIST_SEPARATOR: ${{ inputs.env_var_list_separator }}

  static-sdk:
    name: Static SDK
    needs: construct-matrix
    # Workaround https://github.com/nektos/act/issues/1875
    uses: apple/swift-nio/.github/workflows/swift_test_matrix.yml@matrix_custom_env_vars
    with:
      name: "Static SDK"
      matrix_string: '${{ needs.construct-matrix.outputs.static-sdk-matrix }}'
