name: Pull Request

on: [push]

## We are cancelling previously triggered workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
 
jobs:
  unit-tests-ubuntu:
    name: Unit tests (Ubuntu)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        swift: ["swift:5.8-jammy", "swift:5.9-jammy", "swift:5.10-noble", "swiftlang/swift:nightly-6.0-jammy", "swiftlang/swift:nightly-main-jammy"]
    container:
      image: ${{ matrix.swift.image }}
    timeout-minutes: 20
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run tests
      run: swift test

  unit-tests-macos:
    name: Unit tests (macOS)
    strategy:
      matrix:
        swift: ["5.8", "5.9", "5.10"]
    runs-on: macos-14
    timeout-minutes: 20
    steps:
      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift }}
      - uses: actions/checkout@v4
      - name: Run tests
        run: swift test

  unit-tests-windows:
    name: Unit tests (Windows)
    strategy:
      matrix:
        swift: ["5.8", "5.9", "5.10"]
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-${{ matrix.swift }}-release
          tag: ${{ matrix.swift }}-RELEASE
      - uses: actions/checkout@v4
      - name: Run tests
        run: swift test

  api-breakage-check:
    name: API breakage check
    runs-on: ubuntu-latest
    container:
      image: swift:5.10-noble
    timeout-minutes: 20
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # We need to fetch everything otherwise only the head commit will be fetched.
        fetch-depth: 0
    - name: Mark the workspace as safe
      # https://github.com/actions/checkout/issues/766
      run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
    - name: Run API breakage check
      run: swift package diagnose-api-breaking-changes origin/main

  docs-check:
    name: Documentation check
    runs-on: ubuntu-latest
    container:
      image: swift:5.10-noble
    timeout-minutes: 20
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run documentation check
      shell: bash
      run: |
        set -eu

        raw_targets=$(sed -E -n -e 's/^.* - documentation_targets: \[(.*)\].*$/\1/p' .spi.yml)
        targets=(${raw_targets//,/ })

        for target in "${targets[@]}"; do
          swift package plugin generate-documentation --target "$target" --warnings-as-errors --analyze --level detailed
        done

  unacceptable-language-check:
    name: Unacceptable language check
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run unacceptable language check
      env:
        UNACCEPTABLE_WORD_LIST: "blacklist whitelist slave master sane sanity insane insanity kill killed killing hang hung hanged hanging"
      run: ./scripts/unacceptable_language_check.sh
